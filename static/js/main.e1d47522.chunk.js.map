{"version":3,"sources":["components/CourseGoals/CourseInput/CourseInput.module.css","components/UI/Button/Button.module.css","components/CourseGoals/CourseGoalItem/CourseGoalItem.js","components/CourseGoals/CourseGoalList/CourseGoalList.js","components/UI/Button/Button.js","components/CourseGoals/CourseInput/CourseInput.js","App.js","index.js"],"names":["module","exports","CourseGoalItem","props","className","onClick","onDelete","id","children","CourseGoalList","items","map","goal","onDeleteItem","text","Button","type","styless","button","CourseInput","useState","enteredValue","setEnteredValue","isValid","setIsValid","onSubmit","event","preventDefault","trim","length","onAddGoal","style","invalid","value","onChange","target","App","courseGoals","setCourseGoals","content","textAlign","goalId","prevGoals","filter","enteredText","updatedGoals","unshift","Math","random","toString","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,eAAe,kCAAkC,QAAU,+B,kBCA7ED,EAAOC,QAAU,CAAC,OAAS,yB,yMCkBZC,EAfQ,SAAAC,GAQrB,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCOEC,G,MAhBQ,SAAAN,GACrB,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAAAC,GAAI,OACnB,cAAC,EAAD,CAEEL,GAAIK,EAAKL,GACTD,SAAUH,EAAMU,aAHlB,SAKGD,EAAKE,MAJDF,EAAKL,W,gBCiELQ,EATA,SAAAZ,GACb,OACE,wBAAQa,KAAMb,EAAMa,KAAMZ,UAAWa,IAAQC,OAAQb,QAASF,EAAME,QAApE,SACGF,EAAMK,Y,wBCkCEW,EAzDK,SAAAhB,GAClB,MAAwCiB,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OACE,uBAAMC,SAXkB,SAAAC,GACxBA,EAAMC,iBAC4B,IAA/BN,EAAaO,OAAOC,QAIvB1B,EAAM2B,UAAUT,GAChBC,EAAgB,KAJdE,GAAW,IAQb,UAsBI,sBAAKpB,UAAS,UAAK2B,IAAM,gBAAX,aAA+BR,GAAWQ,IAAMC,SAA9D,UACA,gDACA,uBAAOhB,KAAK,OAAOiB,MAAOZ,EAAca,SA5Cf,SAAAR,GAC1BL,EAAaO,OAAOC,OAAS,GAC9BL,GAAW,GAEbF,EAAgBI,EAAMS,OAAOF,aA4C3B,cAAC,EAAD,CAAQjB,KAAK,SAAb,0BCzCSoB,G,MAnDH,WACV,MAAsChB,mBAAS,CAC7C,CAAEN,KAAM,oBAAqBP,GAAI,MACjC,CAAEO,KAAM,qBAAsBP,GAAI,QAFpC,mBAAO8B,EAAP,KAAoBC,EAApB,KAqBIC,EACF,mBAAGR,MAAO,CAAES,UAAW,UAAvB,4CASF,OANIH,EAAYR,OAAS,IACvBU,EACE,cAAC,EAAD,CAAgB7B,MAAO2B,EAAaxB,aAdd,SAAA4B,GACxBH,GAAe,SAAAI,GAGb,OADqBA,EAAUC,QAAO,SAAA/B,GAAI,OAAIA,EAAKL,KAAOkC,YAgB5D,gCACE,yBAASlC,GAAG,YAAZ,SACE,cAAC,EAAD,CAAauB,UA7BI,SAAAc,GACrBN,GAAe,SAAAI,GACb,IAAMG,EAAY,YAAOH,GAEzB,OADAG,EAAaC,QAAQ,CAAEhC,KAAM8B,EAAarC,GAAIwC,KAAKC,SAASC,aACrDJ,UA2BP,yBAAStC,GAAG,QAAZ,SACGgC,SCtCIW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.e1d47522.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"CourseInput_form-control__17vjl\",\"invalid\":\"CourseInput_invalid__2Ppzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","import React from 'react';\n\nimport './CourseGoalItem.css';\n\nconst CourseGoalItem = props => {\n  // const [deleteText, setDeleteText] = useState('');\n\n  const deleteHandler = () => {\n    // setDeleteText('(Deleted!)');\n    props.onDelete(props.id);\n  };\n\n  return (\n    <li className=\"goal-item\" onClick={deleteHandler}>\n      {props.children}\n    </li>\n  );\n};\n\nexport default CourseGoalItem;\n","import React from 'react';\n\nimport CourseGoalItem from '../CourseGoalItem/CourseGoalItem';\nimport './CourseGoalList.css';\n\nconst CourseGoalList = props => {\n  return (\n    <ul className=\"goal-list\">\n      {props.items.map(goal => (\n        <CourseGoalItem\n          key={goal.id}\n          id={goal.id}\n          onDelete={props.onDeleteItem}\n        >\n          {goal.text}\n        </CourseGoalItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default CourseGoalList;\n","// import React from 'react';\nimport styled from 'styled-components'\n// styled component will allow you to write css in javascript !!! \n\n// what if we want the seperate css file for each of our components\nimport styless from './Button.module.css';\n\n// import './Button.css';\n// in ./Button.css we selected button class but that only not limited to where it is imported only that \n// can be merged with other files which does not import ./Button.css file hence it will create merging of other classes \n// first we install the package as $ npm install --save styled-components\n// const Button = styled.button`` \n// it will allow to make severer html element like styled.h1/h2/div/p/img/.... `` will allow you to add multiple lines code inside it \n\n// styled Component eventually creates a unique class always and wrap the css code go to insepect and check \n\n// const Button = styled.button`\n// ${'' /* .button {\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n// } */}\n// ${'' /* no need to select root element class  */}\n\n//   font: inherit;\n//   width : 100%;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n\n// ${'' /* .button:focus {\n//   outline: none;\n// } */}\n// ${'' /* while selecting sudo selector  use &  */}\n\n// &:focus {\n//   outline: none;\n// }\n\n// &:hover,\n// &:active {\n//   background: #ac0e77;\n//   border-color: #ac0e77;\n//   box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n// }\n\n// @media (min-width: 768px){\n//   width: auto;\n// }\n// ` \n\n// const Button = props => {\n//   return (\n//     <button type={props.type} className=\"button\" onClick={props.onClick}>\n//       {props.children}\n//     </button>\n//   );\n// };\n\nconst Button = props => {\n  return (\n    <button type={props.type} className={styless.button} onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\n\nexport default Button;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\nimport style from './CourseInput.module.css'\n\n// const FormControl = styled.div`\n\n//   margin: 0.5rem 0;\n\n\n// & label {\n//   font-weight: bold;\n//   display: block;\n//   margin-bottom: 0.5rem;\n//   color : ${props => (props.invalid ? 'red' : 'initial')}\n// }\n\n// & input {\n//   display: block;\n//   width: 100%;\n//   border: 1px solid ${props => (props.invalid ? 'red' : '#ccc')} ;\n//   font: inherit;\n//   line-height: 1.5rem;\n//   padding: 0 0.25rem;\n//   background : ${props => (props.invalid ? '#ffd7d7' : 'transparent')}\n// }\n\n// & input:focus {\n//   outline: none;\n//   background: #fad0ec;\n//   border-color: #8b005d;\n// }\n\n// /* read as we have form-control and invalid classes simultaneously to an element  */\n// ${'' /* &.invalid input {\n//   border-color: red;\n//   background-color: #ffd7d7;\n// }\n// &.invalid label{\n//   color: red;\n// } */}\n// ${'' /* now controlled using props  */}\n// `\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    if(enteredValue.trim().length > 0){\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n\n  };\n\n  // the way he optmize the code and the thinking power, hats off\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if(enteredValue.trim().length === 0){\n      setIsValid(false);\n      return;    //      props.onAddGoal(enteredValue); will not exeucte if conditon meets\n    }\n    props.onAddGoal(enteredValue);\n    setEnteredValue('')\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      {/* <div className=\"form-control\"> */}\n        {/* <label style={{color: !isValid ? 'red' : 'black'}}>Course Goal</label>\n        <input style={{borderColor: !isValid ? 'red' : '#ccc' , background : !isValid ? 'salmon' : 'transparent'}} type=\"text\" onChange={goalInputChangeHandler} /> */}\n        {/* instead of setting dynamic inline style we could set css classes dynamically  */}\n\n        {/* if conditon is true below div has two classes form-control invalid if not then it will have only form-control class  */}\n        {/* <div className={`form-control ${!isValid ? 'invalid' : '' }`}>\n        <label >Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n        </div> */}\n\n        {/* style with styled component  */}\n\n        {/* <FormControl className={ !isValid && 'invalid'}> */}\n        {/* we can use props provided by styled components as  */}\n        {/* <FormControl invalid = {!isValid}>\n       <label >Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} /> \n        </FormControl> */}\n        \n        {/* styles return an object from CourseInput.module.css  */}\n        <div className={`${style['form-control']} ${!isValid && style.invalid}`}>\n        <label >Course Goal</label>\n        <input type=\"text\" value={enteredValue} onChange={goalInputChangeHandler} />\n        </div>\n    \n\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n","import React, { useState } from 'react';\n\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\n\nconst App = () => {\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },\n    { text: 'Finish the course!', id: 'g2' }\n  ]);\n\n  const addGoalHandler = enteredText => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = goalId => {\n    setCourseGoals(prevGoals => {\n      // removing the item on click ==> showing all item except for that specific item\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  if (courseGoals.length > 0) {\n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n        {/* {courseGoals.length > 0 && (\n          <CourseGoalList\n            items={courseGoals}\n            onDeleteItem={deleteItemHandler}\n          />\n        ) // <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n        } */}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}